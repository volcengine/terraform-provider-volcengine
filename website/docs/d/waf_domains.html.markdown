---
subcategory: "WAF"
layout: "volcengine"
page_title: "Volcengine: volcengine_waf_domains"
sidebar_current: "docs-volcengine-datasource-waf_domains"
description: |-
  Use this data source to query detailed information of waf domains
---
# volcengine_waf_domains
Use this data source to query detailed information of waf domains
## Example Usage
```hcl
data "volcengine_waf_domains" "foo" {

}
```
## Argument Reference
The following arguments are supported:
* `accurate_query` - (Optional) Matching mode.
* `domain` - (Optional) The domain name of the protected website that needs to be queried.
* `name_regex` - (Optional) A Name Regex of Resource.
* `output_file` - (Optional) File name where to save data source results.

## Attributes Reference
In addition to all arguments above, the following attributes are exported:
* `data` - The collection of query.
    * `access_mode` - Access mode.
    * `advanced_defense_ip` - High-defense instance IP.
    * `api_enable` - Whether the API protection policy has been enabled.
    * `attack_status` - The status of the attack.
    * `auto_cc_enable` - Whether to enable the intelligent CC protection strategy.
    * `backend_groups` - The configuration of source station.
        * `access_port` - Access port number.
        * `backends` - The details of the source station group.
            * `ip` - Source station IP address.
            * `port` - Source station port number.
            * `protocol` - The agreement of Source Station.
            * `weight` - The weight of the source station rules.
        * `name` - Source station group name. Works only on modified scenes.
    * `black_ip_enable` - Whether the blacklist strategy has been enabled.
    * `black_lct_enable` - Whether the regional ban strategy has been activated.
    * `cc_enable` - Whether the cc protection strategy has been enabled.
    * `certificate_id` - When the protocol type is HTTPS, the bound certificate ID needs to be entered.
    * `certificate_name` - The name of the certificate.
    * `client_ip_location` - The method of obtaining the client IP.
    * `client_max_body_size` - The client requests the maximum value of body.
    * `cloud_access_config` - Access port information.
        * `access_protocol` - The access protocol needs to be consistent with the monitoring protocol.
        * `instance_id` - The ID of instance.
        * `listener_id` - The ID of listener.
        * `port` - The port number corresponding to the listener.
        * `protocol` - The type of Listener protocol.
    * `cname` - The CNAME value generated by the WAF instance.
    * `custom_bot_enable` - Whether the custom Bot classification strategy has been enabled.
    * `custom_header` - Custom Header.
    * `custom_rsp_enable` - Whether the custom response interception strategy has been enabled.
    * `defence_mode` - The protection mode of the instance.
    * `dlp_enable` - Whether to activate the strategy for preventing the leakage of sensitive information.
    * `domain` - domain names that need to be protected by WAF.
    * `enable_http2` - Whether to enable HTTP 2.0.
    * `enable_ipv6` - Whether it supports protecting IPv6 requests.
    * `keep_alive_request` - The number of long connection multiplexes.
    * `keep_alive_time_out` - Long connection retention time.
    * `lb_algorithm` - The types of load balancing algorithms.
    * `protocol_follow` - Whether to enable protocol following.
    * `protocol_ports` - Access port information.
        * `http` - Ports supported by the HTTP protocol.
        * `https` - Ports supported by the HTTPs protocol.
    * `protocols` - Access protocol types.
    * `proxy_config` - Whether to enable proxy configuration.
    * `proxy_connect_time_out` - The timeout period for establishing a connection between the WAF and the backend server.
    * `proxy_keep_alive_time_out` - Idle long connection timeout period.
    * `proxy_keep_alive` - The number of reusable WAF origin long connections.
    * `proxy_read_time_out` - The timeout period during which WAF reads the response from the backend server.
    * `proxy_retry` - The number of retries for WAF back to source.
    * `proxy_write_time_out` - The timeout period during which the WAF transmits the request to the backend server.
    * `public_real_server` - Connect to the source return mode.
    * `region` - domain region that need to be protected by WAF.
    * `server_ips` - The IP of the WAF protection instance.
    * `src_ips` - WAF source IP.
    * `ssl_ciphers` - Encryption kit.
    * `ssl_protocols` - TLS protocol version.
    * `status` - The status of access.
    * `system_bot_enable` - Whether the managed Bot classification strategy has been enabled.
    * `tamper_proof_enable` - Whether to enable the page tamper proof policy.
    * `tls_enable` - Whether to enable the log service.
    * `update_time` - The update time.
    * `vpc_id` - The ID of vpc.
    * `waf_enable` - Whether the vulnerability protection strategy has been enabled.
    * `waf_white_req_enable` - Whether to enable the whitening strategy for vulnerability protection requests.
    * `white_enable` - Whether the whitelist strategy has been enabled.
    * `white_field_enable` - Whether to enable the whitening strategy for vulnerability protection fields.
* `total_count` - The total count of query.


